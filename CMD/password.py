
import random
import string

Info = {
    "Description": "Generate secure passwords with customizable length and complexity"
}

def execute(message=None, sender_id=None):
    try:
        # Default length
        length = 12
        
        # Parse length from message if provided
        if message and message.strip().isdigit():
            requested_length = int(message.strip())
            if 4 <= requested_length <= 50:
                length = requested_length
            else:
                return """🔐 **Password Generator**

⚠️ **Invalid length!** 
Please use a length between 4 and 50 characters.

📝 **Usage:** `/password [length]`
📝 **Example:** `/password 16`

🛡️ *Secure passwords for better security!*"""
        
        # Character sets
        lowercase = string.ascii_lowercase
        uppercase = string.ascii_uppercase
        digits = string.digits
        symbols = "!@#$%^&*()-_+=[]{}|;:,.<>?"
        
        # Ensure at least one character from each set
        password = [
            random.choice(lowercase),
            random.choice(uppercase),
            random.choice(digits),
            random.choice(symbols)
        ]
        
        # Fill the rest randomly
        all_chars = lowercase + uppercase + digits + symbols
        for _ in range(length - 4):
            password.append(random.choice(all_chars))
        
        # Shuffle the password
        random.shuffle(password)
        final_password = ''.join(password)
        
        return f"""🔐 **Secure Password Generated**

🔑 **Your Password:** `{final_password}`

📊 **Strength Metrics:**
• Length: {length} characters
• Contains: Letters, Numbers, Symbols
• Security Level: 🟢 High

⚠️ **Security Tips:**
• Don't share this password
• Use unique passwords for each account
• Store in a password manager

🛡️ *Generated by Kora AI Security Suite*"""
        
    except Exception as e:
        return f"❌ Error generating password: {str(e)}"
